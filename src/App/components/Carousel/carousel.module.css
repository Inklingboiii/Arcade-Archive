.main {
	display: grid;
	grid-template-columns: 1fr 3fr 1fr;
	place-items: center;
	padding-top: 15%;
	clip-path: polygon(50% 15%, 100% 0, 100% 100%, 0 100%, 0 0);
}
.cardContainer {
	--card-speed: .5s;
	position: relative;
	width: 100%;
	height: 85vh;
	transform-style: preserve-3d;
	perspective: 50em;
	overflow: hidden;
}

/* Buttons*/

.buttonBefore,
.buttonAfter {
	transform: perspective(1em) rotateX(1deg);
}

.card {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: space-around;
	position: absolute;
	inset: 0;
	background-color: var(--color-background--light);
	height: 100%;
	padding-inline: 0.5em;
	visibility: hidden;
	transform-style: preserve-3d;
}

/* Backface of the card*/
.card::after {
	content: '';
	position: absolute;
	inset: 0;
	background-color: inherit;
	transform: rotateX(180deg);
	-webkit-backface-visibility: hidden;
	backface-visibility: hidden;
}

.cardImage {
	/* https://stackoverflow.com/questions/36230944/prevent-flex-items-from-overflowing-a-container*/
	min-height: 0;
	flex-basis: 50%;
}

.cardText {
	text-align: center;
	max-width: 100%;
}

.cardLink {
	transform: initial!important;
}
/* Animations*/

.cardDownDisappear {
	animation: cardDownDisappear var(--card-speed);
}

.cardUpAppear {
	animation: cardUpAppear var(--card-speed) var(--card-speed) forwards;
}

.cardDownAppear {
	animation: cardDownAppear var(--card-speed) var(--card-speed) forwards;
}

.cardUpDisappear {
	animation: cardUpDisappear var(--card-speed);
}

@keyframes cardDownDisappear {
	to {
		transform: rotateX(-180deg);
		visibility: visible;
		z-index: 0;
	}
}

@keyframes cardUpAppear {
	from {
		transform: rotateX(-180deg);
	}
	to {
		transform: rotateX(-360deg);
		visibility: visible;
		z-index: 5;
	}
}

@keyframes cardDownAppear {
	from {
		transform: rotateX(180deg);
	}
	to {
		transform: rotateX(360deg);
		visibility: visible;
		z-index: 5;
	}
}

@keyframes cardUpDisappear {
	to {
		transform: rotateX(180deg);
		visibility: visible;
		z-index: 0;
	}
}

/* Move buttons down on mobile*/
@media (max-width: 55em) {
	.main {
		grid: 3fr 1fr / repeat(2, 1fr);
	}

	.cardContainer {
		grid-area: 1 / 1 / 2 / 3;
	}

	.buttonBefore {
		grid-area: 2 / 1 / 3 / 2;
	}

	.buttonAfter {
		grid-area: 2 / 2 / 3 / 3;
	}

}